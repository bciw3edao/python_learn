Index: work/work1/test1090324/test1.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>s = {1, 1, 2}\r\nprint(s)\r\n\r\ns.add(3)\r\n# 新增\r\nprint(s)\r\n\r\ns.remove(2)\r\n# 刪除\r\nprint(s)\r\n\r\ns.remove(3)\r\n# 修改:sets不再支援s[1]=99\r\n# 先移除在新增\r\nprint(s)\r\n\r\ns.add(99)\r\nprint(s)\r\n# 查詢\r\nprint(99 in s)\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- work/work1/test1090324/test1.py	(revision 058e84c3b664c877a9e5d255f8e8d4dea9c6f369)
+++ work/work1/test1090324/test1.py	(date 1585048096000)
@@ -1,20 +1,20 @@
-s = {1, 1, 2}
+s={1,1,2}
 print(s)
 
 s.add(3)
-# 新增
+#新增
 print(s)
 
 s.remove(2)
-# 刪除
+#刪除
 print(s)
 
 s.remove(3)
-# 修改:sets不再支援s[1]=99
-# 先移除在新增
+#修改:sets不再支援s[1]=99
+#先移除在新增
 print(s)
 
 s.add(99)
 print(s)
-# 查詢
-print(99 in s)
+#查詢
+print(99 in s)
\ No newline at end of file
Index: work/work1/test1090324/test11-try.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>try:\r\n    print('step:1')\r\n    print(1 / 0)\r\n    print('step:2')\r\nexcept:\r\n    print('exception:1')\r\n    import sys\r\n\r\n    exception = sys.exc_info()\r\n    print(type(exception))\r\n    print(exception)\r\nelse:\r\n    print('??????????????')\r\nfinally:\r\n    print('ok')\r\nprint('---------------')\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- work/work1/test1090324/test11-try.py	(revision 058e84c3b664c877a9e5d255f8e8d4dea9c6f369)
+++ work/work1/test1090324/test11-try.py	(date 1585056532000)
@@ -5,7 +5,6 @@
 except:
     print('exception:1')
     import sys
-
     exception = sys.exc_info()
     print(type(exception))
     print(exception)
Index: work/work1/test1090324/test2.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>a = {1, 2}\r\nb = {2, 3}\r\n# 交集\r\nprint(a.intersection(b))\r\n# 聯集\r\nprint(a.union(b))\r\nc = {*a, *b}\r\nprint(c)\r\n# 差集\r\nprint(a.difference(b))\r\nprint(a - b)\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- work/work1/test1090324/test2.py	(revision 058e84c3b664c877a9e5d255f8e8d4dea9c6f369)
+++ work/work1/test1090324/test2.py	(date 1585049242000)
@@ -1,11 +1,11 @@
-a = {1, 2}
-b = {2, 3}
-# 交集
+a={1,2}
+b={2,3}
+#交集
 print(a.intersection(b))
-# 聯集
+#聯集
 print(a.union(b))
-c = {*a, *b}
+c={*a,*b}
 print(c)
-# 差集
+#差集
 print(a.difference(b))
-print(a - b)
+print(a-b)
Index: work/work1/test1090324/test3.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>s1 = set('michael')\r\nprint(s1)\r\ns2 = set('michelle')\r\nprint(s2)\r\nintersect = s1 & s2\r\nprint(len(intersect))\r\nunion = s1 | s2\r\nprint(len(union))\r\nprint('jaccard similarity:', round(len(intersect) / len(union) * 100, 2), '%', sep='')\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- work/work1/test1090324/test3.py	(revision 058e84c3b664c877a9e5d255f8e8d4dea9c6f369)
+++ work/work1/test1090324/test3.py	(date 1585049862000)
@@ -6,4 +6,4 @@
 print(len(intersect))
 union = s1 | s2
 print(len(union))
-print('jaccard similarity:', round(len(intersect) / len(union) * 100, 2), '%', sep='')
+print('jaccard similarity:', round(len(intersect )/ len(union)*100,2),'%',sep='')
Index: work/work1/test1090324/test4.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>l = [1, 2, 3, 2, 1]\r\ns = frozenset(l)\r\nprint(s)\r\n# s.add(10)\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- work/work1/test1090324/test4.py	(revision 058e84c3b664c877a9e5d255f8e8d4dea9c6f369)
+++ work/work1/test1090324/test4.py	(date 1585050616000)
@@ -1,4 +1,4 @@
 l = [1, 2, 3, 2, 1]
 s = frozenset(l)
 print(s)
-# s.add(10)
+#s.add(10)
Index: work/work1/test1090305/test8.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>a = 1\r\nprint(a + 1)\r\na = 'A'\r\nprint(a + 'B')\r\nprint(a + 1)\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- work/work1/test1090305/test8.py	(revision 058e84c3b664c877a9e5d255f8e8d4dea9c6f369)
+++ work/work1/test1090305/test8.py	(date 1583414746000)
@@ -1,5 +1,5 @@
-a = 1
-print(a + 1)
-a = 'A'
-print(a + 'B')
-print(a + 1)
+a=1
+print(a+1)
+a='A'
+print(a+'B')
+print(a+1)
Index: work/work1/test1090227/test2.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>a = 1\r\nb = 5\r\nfor a in range(b):\r\n    print('數字=' + str(a), '位元=', a.bit_length())\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- work/work1/test1090227/test2.py	(revision 058e84c3b664c877a9e5d255f8e8d4dea9c6f369)
+++ work/work1/test1090227/test2.py	(date 1582809412000)
@@ -1,4 +1,4 @@
 a = 1
 b = 5
 for a in range(b):
-    print('數字=' + str(a), '位元=', a.bit_length())
+    print('數字='+str(a),'位元=',a.bit_length())
Index: work/work1/test1090324/test6.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>dic = {1: 'mary'}\r\nprint(type(dic))\r\nprint(dic)\r\n# add\r\ndic[2] = 'jhon'\r\n# key重覆會覆蓋\r\ndic[1] = 'david'\r\nprint(dic)\r\n# 刪除\r\ndel dic[2]\r\nprint(dic)\r\n# 修改\r\ndic[1] = 'jhon'\r\nprint(dic)\r\ndic.update({1: 'jhon chon'})\r\n# 查詢\r\nprint(1 in dic)\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- work/work1/test1090324/test6.py	(revision 058e84c3b664c877a9e5d255f8e8d4dea9c6f369)
+++ work/work1/test1090324/test6.py	(date 1585051348000)
@@ -1,17 +1,17 @@
 dic = {1: 'mary'}
 print(type(dic))
 print(dic)
-# add
-dic[2] = 'jhon'
-# key重覆會覆蓋
-dic[1] = 'david'
+#add
+dic[2]='jhon'
+#key重覆會覆蓋
+dic[1]='david'
 print(dic)
-# 刪除
+#刪除
 del dic[2]
 print(dic)
-# 修改
-dic[1] = 'jhon'
+#修改
+dic[1]='jhon'
 print(dic)
-dic.update({1: 'jhon chon'})
-# 查詢
-print(1 in dic)
+dic.update({1:'jhon chon'})
+#查詢
+print(1 in dic)
\ No newline at end of file
Index: work/work1/test1090227/test1.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>print('Hello Pyhon', end='')\r\nprint(' world')\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- work/work1/test1090227/test1.py	(revision 058e84c3b664c877a9e5d255f8e8d4dea9c6f369)
+++ work/work1/test1090227/test1.py	(date 1582802402000)
@@ -1,2 +1,2 @@
-print('Hello Pyhon', end='')
-print(' world')
+print('Hello Pyhon',end='')
+print(' world')
\ No newline at end of file
Index: work/work1/test1090225/test2.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>print('123456789')\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- work/work1/test1090225/test2.py	(revision 058e84c3b664c877a9e5d255f8e8d4dea9c6f369)
+++ work/work1/test1090225/test2.py	(date 1582637652000)
@@ -1,1 +1,1 @@
-print('123456789')
+print('123456789')
\ No newline at end of file
Index: work/work1/test1090225/test1.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>print('Hello Pyhon')\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- work/work1/test1090225/test1.py	(revision 058e84c3b664c877a9e5d255f8e8d4dea9c6f369)
+++ work/work1/test1090225/test1.py	(date 1582636182000)
@@ -1,1 +1,1 @@
-print('Hello Pyhon')
+print('Hello Pyhon')
\ No newline at end of file
Index: work/work1/test1090324/test9-IO.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>f = open(r'/work1/text/text1.txt')\r\nx = f.read()\r\nprint(type(x))\r\nprint(x)\r\nprint(len(x))\r\nf.close()\r\n\r\nf = open(r'/work1/text/text1.txt')\r\nwhile True:\r\n    date = f.readline()\r\n    if not date:\r\n        break\r\n    print(date)\r\nprint('close?', f.closed)\r\nf.close()\r\nprint('close?', f.closed)\r\n\r\n# f = open(r'D:\\程式\\python\\work\\text\\text1.txt')\r\nwith open(r'/work1/text/text1.txt') as f:\r\n    all = f.readlines()\r\n    print(type(all))\r\n    for x in all:\r\n        print(x, sep='', end='\\n')\r\n    # f.close()\r\n    print('close?', f.closed)\r\nprint('close?', f.closed)\r\nf.close()\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- work/work1/test1090324/test9-IO.py	(revision 058e84c3b664c877a9e5d255f8e8d4dea9c6f369)
+++ work/work1/test1090324/test9-IO.py	(date 1586863128000)
@@ -20,7 +20,7 @@
     all = f.readlines()
     print(type(all))
     for x in all:
-        print(x, sep='', end='\n')
+        print(x,sep='',end='\n')
     # f.close()
     print('close?', f.closed)
 print('close?', f.closed)
Index: work/work1/test1090305/test7.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>a = True\r\na = a * 2\r\nprint(a)\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- work/work1/test1090305/test7.py	(revision 058e84c3b664c877a9e5d255f8e8d4dea9c6f369)
+++ work/work1/test1090305/test7.py	(date 1583414686000)
@@ -1,3 +1,3 @@
-a = True
-a = a * 2
+a=True
+a=a*2
 print(a)
Index: work/work1/test1090305/test9.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>a = int(input(\"input number\"))\r\nif a > 0:\r\n    print('a>0')\r\nelif a > 0:\r\n    print('a>0')\r\nelif a == 0:\r\n    print('a=0')\r\nelse:\r\n    print('Error')\r\nprint(\"end\")\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- work/work1/test1090305/test9.py	(revision 058e84c3b664c877a9e5d255f8e8d4dea9c6f369)
+++ work/work1/test1090305/test9.py	(date 1583415302000)
@@ -1,10 +1,9 @@
-a = int(input("input number"))
-if a > 0:
+a=int(input("input number"))
+if a>0:
     print('a>0')
-elif a > 0:
+elif a>0:
     print('a>0')
-elif a == 0:
+elif a==0:
     print('a=0')
-else:
-    print('Error')
-print("end")
+else:print('Error')
+print("end")
\ No newline at end of file
Index: work/work2/txt/aa.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- work/work2/txt/aa.xml	(date 1588072788000)
+++ work/work2/txt/aa.xml	(date 1588072788000)
@@ -0,0 +1,11 @@
+<?xml version = "1.0" encoding = "UTF-8" ?>
+<Employees>
+    <Employee type="Programmer">
+		<id>1</id>
+		<name>Mary</name>
+	</Employee>
+    <Employee type="IC Design">
+		<id>2</id>
+		<name>John</name>
+	</Employee>
+</Employees>
Index: work/work1/py_packge/add.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>def adddd(a, b):\r\n    return a + b\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- work/work1/py_packge/add.py	(revision 058e84c3b664c877a9e5d255f8e8d4dea9c6f369)
+++ work/work1/py_packge/add.py	(date 1584017824000)
@@ -1,2 +1,2 @@
 def adddd(a, b):
-    return a + b
+    return a + b
\ No newline at end of file
Index: work/work2/txt/ae.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- work/work2/txt/ae.xml	(date 1588073906000)
+++ work/work2/txt/ae.xml	(date 1588073906000)
@@ -0,0 +1,1 @@
+<Employees><Employee id="1" name="Mary" /><Employee id="2" name="Jhon" /></Employees>
\ No newline at end of file
Index: work/work2/txt/ab.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- work/work2/txt/ab.txt	(date 1587040612000)
+++ work/work2/txt/ab.txt	(date 1587040612000)
@@ -0,0 +1,3 @@
+id,address,name
+1, Taiwan Taipei Songshan dist No 458,Mary
+2, USA Maryland No 12,John
\ No newline at end of file
Index: work/work2/txt/ad.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- work/work2/txt/ad.xml	(date 1588073446000)
+++ work/work2/txt/ad.xml	(date 1588073446000)
@@ -0,0 +1,1 @@
+<Employees><Employee><id>1</id><name>Mary</name></Employee><Employee id="2" name="Jhon" /></Employees>
\ No newline at end of file
Index: work/work2/txt/ac.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- work/work2/txt/ac.txt	(date 1587475154000)
+++ work/work2/txt/ac.txt	(date 1587475154000)
@@ -0,0 +1,1 @@
+[{"id":1,"name":"Mary"},{"id":2,"name":"John"}]
\ No newline at end of file
Index: work/work2/1090416/test1.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- work/work2/1090416/test1.py	(date 1587036766000)
+++ work/work2/1090416/test1.py	(date 1587036766000)
@@ -0,0 +1,15 @@
+input_id = input('input User ID:')
+input_name = input('input User NAME:')
+with open(r'..\txt\aa.txt') as f:
+    l = f.readlines()
+    def filter(data):
+        id,country,name = data.strip().split(',')
+        if id ==input_id and name == input_name:
+            return True
+        else:
+            return False
+    matches = [x.strip() for  x in l[1:] if filter(x)]
+    if len(matches)>0:
+        print(matches)
+    else:
+        print('Not Found')
Index: work/work2/1090416/test2.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- work/work2/1090416/test2.py	(date 1587040648000)
+++ work/work2/1090416/test2.py	(date 1587040648000)
@@ -0,0 +1,17 @@
+import csv
+
+with open(r'..\txt\aa.txt') as f:
+    data1 = csv.reader(f)
+    next(data1)
+    for y in data1:
+        print(y)
+    f.seek(0)#移動標頭
+    data = csv.reader(f)
+    print(type(data))
+    for x in list(data)[1:]:
+        print(x, type(x))
+        print(x[1], len(x[1]))
+    f.seek(0)
+    data2 = csv.DictReader(f)
+    for z in data2:
+        print(z['id'], x['name'])
Index: work/work2/1090416/test3.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- work/work2/1090416/test3.py	(date 1587042520000)
+++ work/work2/1090416/test3.py	(date 1587042520000)
@@ -0,0 +1,13 @@
+import csv
+
+input_id = input('input User   ID:')
+input_name = input('input User NAME:')
+
+with open(r'..\txt\ab.txt') as f:
+    data = csv.DictReader(f)
+    for z in data:
+        if input_id == z['id'] and input_name == z['name']:
+            print('ID     :',z['id'],'\nname   :', z['name'],'\naddress:', z['address'])
+            break
+    else:
+        print('Not Found')
\ No newline at end of file
Index: work/work2/1090416/test4.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- work/work2/1090416/test4.py	(date 1587467104000)
+++ work/work2/1090416/test4.py	(date 1587467104000)
@@ -0,0 +1,10 @@
+emp = {}
+emp['id'] = 1
+emp['name'] = 'mary'
+print(emp, type(emp))
+
+import json
+
+jsonRep = json.dumps(emp)
+print(jsonRep,type(jsonRep))
+
Index: work/work2/1090428/test1.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- work/work2/1090428/test1.py	(date 1588073854000)
+++ work/work2/1090428/test1.py	(date 1588073854000)
@@ -0,0 +1,19 @@
+import xml.etree.ElementTree as ET
+employees= ET.Element('Employees')
+employee1= ET.SubElement(employees,'Employee')
+id1 = ET.SubElement(employee1,'id')
+id1.text = '1'
+name1 =ET.SubElement(employee1,'name')
+name1.text= 'Mary'
+
+
+employee1= ET.SubElement(employees,'Employee')
+id1 = ET.SubElement(employee1,'id')
+id1.text = '1'
+name1 =ET.SubElement(employee1,'name')
+name1.text= 'Mary'
+
+print(ET.tostring(employees))
+et = ET.ElementTree(employees)
+with open(r'..\txt\ae.xml', 'wb') as f:
+    et.write(f, encoding='UTF-8')
Index: work/work2/1090428/test10.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- work/work2/1090428/test10.py	(date 1588245478000)
+++ work/work2/1090428/test10.py	(date 1588245478000)
@@ -0,0 +1,18 @@
+import csv
+
+with open(r'..\voteData\2010村里長\elcand.csv', encoding='UTF-8')as f:
+    csvStr = csv.reader(f)
+
+    brithdate = []
+    for x in csvStr:
+        brithdate += [int(x[9])]
+    ages = [99-x for x in brithdate]
+    print('2010村里長候選人平均年齡:',sum(ages)/len(ages))
+    
+    # SumAge = 0
+    # Number_of_people = 0
+    # for y in csvStr:
+    #     SumAge += (99 - int(y[9]))
+    #     Number_of_people += 1
+    # else:
+    #     print('2010村里長候選人平均年齡:', SumAge / Number_of_people)
Index: work/work2/1090428/test2.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- work/work2/1090428/test2.py	(date 1588073746000)
+++ work/work2/1090428/test2.py	(date 1588073746000)
@@ -0,0 +1,14 @@
+import xml.etree.ElementTree as ET
+
+xmlTree = ET.parse(r'..\txt\ad.xml')
+employees = xmlTree.getroot()
+for employee in employees:
+    print(employees.tag)
+    for child_tag in employee:
+        print(child_tag.tag, child_tag.text)
+
+for employee in employees:
+    print(employee.tag)
+    print(employee.attrib['id'])
+    print(employee.attrib['name'])
+
Index: work/work2/1090428/test3.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- work/work2/1090428/test3.py	(date 1588073906000)
+++ work/work2/1090428/test3.py	(date 1588073906000)
@@ -0,0 +1,15 @@
+import xml.etree.ElementTree as ET
+
+employees = ET.Element('Employees')
+employee1 = ET.SubElement(employees, 'Employee')
+employee1.set('id', '1')
+employee1.set('name', 'Mary')
+
+employee2 = ET.SubElement(employees, 'Employee')
+employee2.set('id', '2')
+employee2.set('name', 'Jhon')
+
+print(ET.tostring(employees))
+et = ET.ElementTree(employees)
+with open(r'..\txt\ae.xml', 'wb') as f:
+    et.write(f, encoding='UTF-8')
Index: work/work2/1090428/test4.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- work/work2/1090428/test4.py	(date 1588073946000)
+++ work/work2/1090428/test4.py	(date 1588073946000)
@@ -0,0 +1,9 @@
+import xml.etree.ElementTree as ET
+
+xmlTree = ET.parse(r'..\txt\ae.xml')
+employees = xmlTree.getroot()
+
+for employee in employees:
+    print(employee.tag)
+    print(employee.attrib['id'])
+    print(employee.attrib['name'])
\ No newline at end of file
Index: work/work2/1090428/test5.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- work/work2/1090428/test5.py	(date 1588075824000)
+++ work/work2/1090428/test5.py	(date 1588075824000)
@@ -0,0 +1,10 @@
+import xml.etree.ElementTree as ET
+
+xml = ET.parse(r'..\txt\aa.xml')
+root = xml.getroot()
+l = root.findall("Employee")
+for element in l:
+    print('tag:', element.tag, 'text:', element.text)
+    print('attrib:', element.attrib['type'])
+    for child in element:
+        print('child tag:', child.tag, 'child text:', child.text)
Index: work/work2/1090428/test6.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- work/work2/1090428/test6.py	(date 1588075972000)
+++ work/work2/1090428/test6.py	(date 1588075972000)
@@ -0,0 +1,10 @@
+from lxml import etree
+
+xml = etree.parse(r'..\txt\aa.xml')
+root = xml.getroot()
+l = root.xpath("Employee[id=1]")
+for element in l:
+    print('tag:', element.tag, 'text:', element.text)
+    print('attrib:', element.attrib['type'])
+    for child in element:
+        print('child tag:', child.tag, 'child text:', child.text)
Index: work/work2/1090428/test7.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- work/work2/1090428/test7.py	(date 1588077148000)
+++ work/work2/1090428/test7.py	(date 1588077148000)
@@ -0,0 +1,11 @@
+from lxml import etree
+
+with open(r'..\txt\aa.xml', encoding='UTF-8') as f:
+    data = f.readlines()
+    print(type(data))
+    root = etree.fromstringlist(data)
+    l = root.xpath('Employee[id=1]')
+    for element in l:
+        print('tag:', element.tag, 'text:', element.text)
+        for child in element:
+            print('child tag:', child.tag, 'child text:', child.text)
Index: work/work2/1090428/test8.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- work/work2/1090428/test8.py	(date 1588077464000)
+++ work/work2/1090428/test8.py	(date 1588077464000)
@@ -0,0 +1,20 @@
+from lxml import etree
+
+xml_str = '''
+<Employees>
+    <Employee type="Programmer">
+		<id>1</id>
+		<name>Mary</name>
+	</Employee>
+    <Employee type="IC Design">
+		<id>2</id>
+		<name>John</name>
+	</Employee>
+</Employees>
+'''
+root = etree.fromstring(xml_str)
+l = root.xpath('Employee[id=1]')
+for element in l:
+    print('tag:', element.tag, 'text:', element.text)
+    for child in element:
+        print('child tag:', child.tag, 'child text:', child.text)
Index: work/work2/1090428/test9.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- work/work2/1090428/test9.py	(date 1588079538000)
+++ work/work2/1090428/test9.py	(date 1588079538000)
@@ -0,0 +1,30 @@
+from lxml import etree
+
+xml_str = '''
+<Employees>
+    <Employee type="Programmer">
+		<id>1</id>
+		<name>Mary</name>
+	</Employee>
+    <Employee type="IC Design">
+		<id>2</id>
+		<name>John</name>
+	</Employee>
+</Employees>
+'''
+root = etree.fromstring(xml_str)
+l = root.xpath('Employee[id=1]')
+# l = root.xpath('Employee[1]')  # 第1個
+# l = root.xpath('Employee[position()<3]')  # 前2個
+# l = root.xpath('Employee[last()]')  # 倒數第1個
+# l = root.xpath('Employee[last()]')  # 倒數第2個
+# l = root.xpath('Employee[@type="Programmer"]')  # 列出type="Programmer
+# l = root.xpath('Employee[id>1]')  # 列出id>1
+# l = root.xpath('Employee[id>1]/name')  # 列出id>1的name
+# l = root.xpath('Employee[starts-with(name,"M")]')  # 列出name[0]="M"的員工資料
+# l = root.xpath('Employee[id=1 and name="Mary"]')  # 列出id>1且name="Mary"的員工資料
+
+for element in l:
+    print('tag:', element.tag, 'text:', element.text)
+    for child in element:
+        print('child tag:', child.tag, 'child text:', child.text)
Index: work/work2/1090507/test1.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- work/work2/1090507/test1.py	(date 1588849916000)
+++ work/work2/1090507/test1.py	(date 1588849916000)
@@ -0,0 +1,10 @@
+import numpy as np
+
+arr = np.array([1, 2, 3,])
+print(arr)
+print(np.sum(arr))
+print(np.nansum(arr))
+# np.nanmean()
+# np.nanstd()
+# np.nanmin()
+# np.nanedian()
Index: work/work2/1090507/test2.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- work/work2/1090507/test2.py	(date 1588851094000)
+++ work/work2/1090507/test2.py	(date 1588851094000)
@@ -0,0 +1,10 @@
+import numpy as np
+
+arr = np.arange(1, 11)
+print(arr)
+print(arr < 5)
+
+t= np.where(arr<5)
+print(t)
+print(type(t))
+print(arr[t]**2)
\ No newline at end of file
Index: work/work2/1090507/test3.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- work/work2/1090507/test3.py	(date 1588851634000)
+++ work/work2/1090507/test3.py	(date 1588851634000)
@@ -0,0 +1,6 @@
+import numpy as np
+
+arr = np.arange(1, 51)
+mask = (arr <= 10) | (arr >= 44)
+print(mask, type(mask))
+print(arr[mask])
Index: work/work2/1090507/test4.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- work/work2/1090507/test4.py	(date 1588854960000)
+++ work/work2/1090507/test4.py	(date 1588854960000)
@@ -0,0 +1,19 @@
+import numpy as np
+arr = np.array([4, 2, 1, 3])
+print(np.sort(arr))
+print(arr)
+print(np.argsort(arr))
+print(arr[np.argsort(arr)])
+print(np.sort(-arr))
+print(-np.sort(-arr))
+print(arr)
+print('___________________________________________')
+arr = np.array(['Michael','Mary'])
+lenFunction = np.vectorize(len)
+print(lenFunction(arr))
+print('___________________________________________')
+def m_len(data):
+    print(data)
+    return len(data)
+lenFunction = np.vectorize(m_len)
+print(lenFunction(arr))
\ No newline at end of file
Index: work/work2/1090507/test5.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- work/work2/1090507/test5.py	(date 1588858964000)
+++ work/work2/1090507/test5.py	(date 1588858964000)
@@ -0,0 +1,19 @@
+import numpy as np
+
+
+def filter(data, key):
+    if data == key:
+        return data
+
+
+arr = np.array(['Michael', 'John', 'Mary', 'Tony', 'A123', 'B123', 'C123'])
+key = input('請輸入名字字首(大寫)')
+i = 0
+for str in arr:
+    if str[0] == key:
+        print(str)
+        i+=1
+else:
+    print('Notfind\n'if i==0 else '',end='')
+
+# print(arr[arr >= key] if arr[arr >= key].size != 0 else 'NotFind')
Index: work/work2/1090430/test1.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- work/work2/1090430/test1.py	(date 1588250066000)
+++ work/work2/1090430/test1.py	(date 1588250066000)
@@ -0,0 +1,26 @@
+# import math
+# print(math.sqrt(4))
+import csv
+
+with open(r'..\voteData\2010村里長\elcand.csv', encoding='UTF-8')as f:
+    csvStr = csv.reader(f)
+
+    brithdate = []
+    for x in csvStr:
+        brithdate += [int(x[9])]
+    ages = [99 - x for x in brithdate]
+    average = sum(ages) / len(ages)
+    print('2010村里長候選人平均年齡:', average)
+
+    Number_of_differences = [x - average for x in ages]
+    Number_of_differences_pow = [y ** 2 for y in Number_of_differences]
+    Variation = sum(Number_of_differences_pow) / len(Number_of_differences_pow)
+    Standard_deviation = Variation ** 0.5
+    print('    標準差            :', Standard_deviation)
+
+    # agess = 0
+    # for y in range(len(ages)):
+    #     agess += (ages[y] - (sum(ages) / len(ages))) ** 2
+    # else:
+    #     print((agess / len(ages)) ** 0.5)
+    #     print(((Number_of_differences ** 2) / len(Number_of_differences)) ** 0.5)
Index: work/work2/1090430/test2.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- work/work2/1090430/test2.py	(date 1588252248000)
+++ work/work2/1090430/test2.py	(date 1588252248000)
@@ -0,0 +1,23 @@
+l = [1, 'A']
+print(l)
+import numpy
+
+arr = numpy.array([1, 'A'])
+print(arr)
+L = list(range(1, 5, 1))
+print(L)
+arr = numpy.arange(start=1, stop=5, step=.5)
+print(arr)
+
+# 列出元素型態
+print(arr.dtype)
+# 列出元素型態於記憶體之容量
+# arr = arr.astype(numpy.int32)
+print(arr.itemsize)
+# 列出numpy 陣列於記憶體之容量(元素個數*元素型態容量)
+print(arr.nbytes)
+
+arr = arr.astype(numpy.int32)
+print(arr.itemsize)
+# 列出numpy 陣列於記憶體之容量(元素個數*元素型態容量)
+print(arr.nbytes)
Index: work/work1/test1090305/test5.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>x = input('Input Someshing')\r\nprint('都大寫?', x.isupper())\r\nprint('都小寫?', x.islower())\r\nprint('都數字?', x.isdigit())\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- work/work1/test1090305/test5.py	(revision 058e84c3b664c877a9e5d255f8e8d4dea9c6f369)
+++ work/work1/test1090305/test5.py	(date 1583412536000)
@@ -1,4 +1,4 @@
-x = input('Input Someshing')
-print('都大寫?', x.isupper())
-print('都小寫?', x.islower())
-print('都數字?', x.isdigit())
+x=input('Input Someshing')
+print('都大寫?',x.isupper())
+print('都小寫?',x.islower())
+print('都數字?',x.isdigit())
\ No newline at end of file
Index: work/work2/1090430/test3.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- work/work2/1090430/test3.py	(date 1588681954000)
+++ work/work2/1090430/test3.py	(date 1588681954000)
@@ -0,0 +1,35 @@
+a = [1, 2, 3]
+b = [4, 5, 6]
+c = a + b
+print(type(c))
+print(c)
+
+import numpy as np
+
+a = np.array([1, 2, 3])
+b = np.array([4, 5, 6])
+c = a + b
+print(type(c))
+print(c)
+print(a ** 2)
+
+import time
+
+l = list(range(100_0000))
+starttime = time.time()
+# print(l)
+l = [x ** 20 for x in l]
+# print(l)
+listRunTime = time.time() - starttime
+print('listRunTime=', listRunTime)
+
+starttime = 0
+
+arr = np.arange(100_0000)
+starttime = time.time()
+# print(arr)
+arr = arr ** 20000
+# print(arr)
+npRunTime = time.time() - starttime
+print('npRunTime=', time.time(), '-', starttime, '=', npRunTime)
+print('效能差異:', listRunTime / npRunTime)
Index: work/work1/test1090305/test4.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>a = 'abc'\r\nprint('length(a)=', len(a))\r\nprint(a.lower())\r\nprint(a.upper())\r\nb = '   tony jian       '\r\nprint(b.strip())\r\nprint(b.split())\r\nprint(b)\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- work/work1/test1090305/test4.py	(revision 058e84c3b664c877a9e5d255f8e8d4dea9c6f369)
+++ work/work1/test1090305/test4.py	(date 1583412120000)
@@ -1,8 +1,8 @@
-a = 'abc'
-print('length(a)=', len(a))
+a='abc'
+print('length(a)=',len(a))
 print(a.lower())
 print(a.upper())
-b = '   tony jian       '
+b='   tony jian       '
 print(b.strip())
 print(b.split())
-print(b)
+print(b)
\ No newline at end of file
Index: work/work1/test1090305/test3.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>a = int(input('InputSomeshingNumber(a)'))\r\nb = int(input('InputSomeshingNumber(b)'))\r\nc = int(input('ChooseStyle(1~4)'))\r\nif c == 1:\r\n    print(\"Style(1):%d+%d=%d\" % (a, b, a + b))\r\nelif c == 2:\r\n    print('Style(2):{0}+{1}={2}'.format(a, b, a + b))\r\nelif c == 3:\r\n    print(f\"Style(3):{a}+{b}={a + b}\")\r\nelif c == 4:\r\n    print('Style(1):', a, '+', b, '=', a + b, sep='')\r\nelse:\r\n    print('Style_Choose_error')\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- work/work1/test1090305/test3.py	(revision 058e84c3b664c877a9e5d255f8e8d4dea9c6f369)
+++ work/work1/test1090305/test3.py	(date 1583411588000)
@@ -8,6 +8,6 @@
 elif c == 3:
     print(f"Style(3):{a}+{b}={a + b}")
 elif c == 4:
-    print('Style(1):', a, '+', b, '=', a + b, sep='')
+    print('Style(1):',a, '+', b, '=', a + b, sep='')
 else:
     print('Style_Choose_error')
Index: work/work1/test1090305/test6.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>a = True\r\nb = False\r\nprint('a      =', a)\r\nprint('b      =', b)\r\nprint('a and b=', a and b)\r\nprint('a or b =', a or b)\r\nprint('a not  =', not a)\r\nprint('b not  =', not b)\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- work/work1/test1090305/test6.py	(revision 058e84c3b664c877a9e5d255f8e8d4dea9c6f369)
+++ work/work1/test1090305/test6.py	(date 1583413084000)
@@ -1,8 +1,8 @@
-a = True
-b = False
-print('a      =', a)
-print('b      =', b)
-print('a and b=', a and b)
-print('a or b =', a or b)
-print('a not  =', not a)
-print('b not  =', not b)
+a=True
+b=False
+print('a      =',a)
+print('b      =',b)
+print('a and b=',a and b)
+print('a or b =',a or b)
+print('a not  =',not a)
+print('b not  =',not b)
\ No newline at end of file
Index: work/work1/test1090305/test1.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>fullname = \"tony\\tjian\"\r\nprint(fullname)\r\nfullname = \"tony\\njian\"\r\nprint(fullname)\r\nfullname = \"\\\\tony\\\\jian\"\r\nprint(fullname)\r\nfullname = r\"tony\\njian\"\r\nprint(fullname)\r\nfullname = \"tony\\\\njian\"\r\nprint(fullname)\r\nfullname = \"\\\"tony\\\"njian\"\r\nprint(fullname)\r\nfullname = \"tonyjian\"\r\nprint(fullname)\r\nfullname = '\"tonyjian\"'\r\nprint(fullname)\r\nfullname = \"'tonyjian'\"\r\nprint(fullname)\r\n'''註解和跳脫字元'''\r\nfullname = \"\"\"'\"tony jian\"'\"\"\"\r\nprint(fullname)\r\nfullname = '''\"'tony jian'\"'''\r\nprint(fullname)\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- work/work1/test1090305/test1.py	(revision 058e84c3b664c877a9e5d255f8e8d4dea9c6f369)
+++ work/work1/test1090305/test1.py	(date 1583841278000)
@@ -20,4 +20,4 @@
 fullname = """'"tony jian"'"""
 print(fullname)
 fullname = '''"'tony jian'"'''
-print(fullname)
+print(fullname)
\ No newline at end of file
Index: work/work1/test1090227/test4.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>a = 2\r\nfor i in range(15):\r\n    a = a * 2\r\nprint(a)\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- work/work1/test1090227/test4.py	(revision 058e84c3b664c877a9e5d255f8e8d4dea9c6f369)
+++ work/work1/test1090227/test4.py	(date 1582809982000)
@@ -1,4 +1,4 @@
-a = 2
+a=2
 for i in range(15):
-    a = a * 2
-print(a)
+    a=a*2
+print(a)
\ No newline at end of file
Index: work/work1/test1090227/test3.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>c = 1\r\nd = 2.3\r\nprint(type(c))\r\nprint(type(d))\r\n\r\nimport sys\r\n\r\nprint(sys.maxsize)\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- work/work1/test1090227/test3.py	(revision 058e84c3b664c877a9e5d255f8e8d4dea9c6f369)
+++ work/work1/test1090227/test3.py	(date 1582809420000)
@@ -1,8 +1,7 @@
-c = 1
-d = 2.3
+c=1
+d=2.3
 print(type(c))
 print(type(d))
 
 import sys
-
 print(sys.maxsize)
Index: work/work2/1090414/test2.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>def get_enconding(FileName):\r\n    enconding_list = [None, 'ANSI', 'UTF-8', 'Big5', 'Windows-1252', 'Unicode']\r\n    for encode in enconding_list:\r\n        try:\r\n            with open(FileName, encoding=encode):\r\n                return encode\r\n        except:\r\n            pass\r\n\r\n\r\nenconding = get_enconding(r'..\\txt\\aa.txt')\r\nwith open(r'..\\txt\\aa.txt', encoding=enconding) as file:\r\n    id = input('請輸入員工編號:')\r\n    name = input('請輸入員工姓名:')\r\n    for chr_line in file.readlines():\r\n        # print(chr_line.strip().split(','))\r\n        list_line = chr_line.strip().split(',')\r\n        if list_line[0] == id and list_line[2] == name:\r\n            print(list_line)\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- work/work2/1090414/test2.py	(revision 058e84c3b664c877a9e5d255f8e8d4dea9c6f369)
+++ work/work2/1090414/test2.py	(date 1587037414000)
@@ -9,11 +9,14 @@
 
 
 enconding = get_enconding(r'..\txt\aa.txt')
+
 with open(r'..\txt\aa.txt', encoding=enconding) as file:
-    id = input('請輸入員工編號:')
-    name = input('請輸入員工姓名:')
+    input_id = input('請輸入員工編號:')
+    input_name = input('請輸入員工姓名:')
+
     for chr_line in file.readlines():
         # print(chr_line.strip().split(','))
-        list_line = chr_line.strip().split(',')
-        if list_line[0] == id and list_line[2] == name:
-            print(list_line)
+        list_id, list_country, list_name = chr_line.strip().split(',')
+        if list_id == input_id and list_name == input_name:
+            print('ID     :', list_id, '\nCountry:', list_country, '\nName   :', list_name)
+            break
Index: work/work1/test1090310/IDChecker.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>id = 'A111111111'\r\nprint('EX ID:', id)\r\nid = input('input ID:')\r\nif len(id) == 10:\r\n    print('ID長度正確')\r\n    if id.isupper():\r\n        if id[1:].isdigit() == True:\r\n            print('ID字首正確')\r\n            if id[1] == '1':\r\n                print('性別:男')\r\n            elif id[1] == '2':\r\n                print('性別:女')\r\n            else:\r\n                print('性別偵測錯誤\\n請重新輸入ID')\r\n        else:\r\n            print('ID後九碼皆為數字\\n請重新輸入ID')\r\n    else:\r\n        print('ID字首英文為大寫\\n請重新輸入ID')\r\nelse:\r\n    print('ID輸入錯誤(長度錯誤)')\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- work/work1/test1090310/IDChecker.py	(revision 058e84c3b664c877a9e5d255f8e8d4dea9c6f369)
+++ work/work1/test1090310/IDChecker.py	(date 1583843556000)
@@ -1,6 +1,6 @@
 id = 'A111111111'
-print('EX ID:', id)
-id = input('input ID:')
+print('EX ID:',id)
+id=input('input ID:')
 if len(id) == 10:
     print('ID長度正確')
     if id.isupper():
@@ -14,7 +14,6 @@
                 print('性別偵測錯誤\n請重新輸入ID')
         else:
             print('ID後九碼皆為數字\n請重新輸入ID')
-    else:
-        print('ID字首英文為大寫\n請重新輸入ID')
+    else:print('ID字首英文為大寫\n請重新輸入ID')
 else:
     print('ID輸入錯誤(長度錯誤)')
Index: work/work1/test1090310/IDChecker1.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>id = 'A123456789'\r\nprint('EX ID:', id)\r\nid = input('input ID:')\r\nif len(id) != 10:\r\n    print('長度不符合')\r\nelif not (id.isupper()):\r\n    print('自首不符')\r\nelif not (id[1] in '12'):\r\n    print('性別偵測錯誤')\r\nelif not (id[2:].isdigit()):\r\n    print('ID後九碼非全數字')\r\nelse:\r\n    print('資料正確')\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- work/work1/test1090310/IDChecker1.py	(revision 058e84c3b664c877a9e5d255f8e8d4dea9c6f369)
+++ work/work1/test1090310/IDChecker1.py	(date 1583843530000)
@@ -1,13 +1,13 @@
-id = 'A123456789'
-print('EX ID:', id)
-id = input('input ID:')
-if len(id) != 10:
+id='A123456789'
+print('EX ID:',id)
+id=input('input ID:')
+if len(id)!=10:
     print('長度不符合')
-elif not (id.isupper()):
+elif not(id.isupper()):
     print('自首不符')
 elif not (id[1] in '12'):
     print('性別偵測錯誤')
 elif not (id[2:].isdigit()):
     print('ID後九碼非全數字')
 else:
-    print('資料正確')
+    print('資料正確')
\ No newline at end of file
Index: work/work1/test1090310/test1.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>a = 0\r\nif a == 0:\r\n    print('a=0')\r\nelif a > 0:\r\n    print('a>=0')\r\nelse:\r\n    print('a<0')\r\nprint(\"a=0\" if a == 0 else \"a>=0\" if a >= 0 else \"a<0\")\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- work/work1/test1090310/test1.py	(revision 058e84c3b664c877a9e5d255f8e8d4dea9c6f369)
+++ work/work1/test1090310/test1.py	(date 1583843256000)
@@ -5,4 +5,4 @@
     print('a>=0')
 else:
     print('a<0')
-print("a=0" if a == 0 else "a>=0" if a >= 0 else "a<0")
+print("a=0" if a==0 else "a>=0" if a >= 0 else "a<0")
Index: work/work1/test1090310/test2.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>a = 0\r\nprint('a=', a)\r\nprint(\"True\" if a else \"False\")\r\na = -1\r\nprint('a=', a)\r\nprint(\"True\" if a else \"False\")\r\na = 'A'\r\nprint('a=', a)\r\nprint(\"True\" if a else \"False\")\r\na = ''\r\nprint('a=', a)\r\nprint(\"True\" if a else \"False\")\r\na = None\r\nprint('a=', a)\r\nprint(\"True\" if a else \"False\")\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- work/work1/test1090310/test2.py	(revision 058e84c3b664c877a9e5d255f8e8d4dea9c6f369)
+++ work/work1/test1090310/test2.py	(date 1583844166000)
@@ -1,15 +1,15 @@
-a = 0
-print('a=', a)
+a=0
+print('a=',a)
 print("True" if a else "False")
-a = -1
-print('a=', a)
+a=-1
+print('a=',a)
 print("True" if a else "False")
-a = 'A'
-print('a=', a)
+a='A'
+print('a=',a)
 print("True" if a else "False")
-a = ''
-print('a=', a)
+a=''
+print('a=',a)
 print("True" if a else "False")
-a = None
-print('a=', a)
-print("True" if a else "False")
+a=None
+print('a=',a)
+print("True" if a else "False")
\ No newline at end of file
Index: work/work1/test1090310/test3.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>for x in range(10):\r\n    print(x, end='')\r\nprint()\r\nfor x in range(1, 11):\r\n    print(x, end='')\r\nprint()\r\nfor x in range(0, 10, 2):\r\n    print(x, end='')\r\nprint()\r\nfor _ in range(3):\r\n    print('hello ', end='')\r\nprint()\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- work/work1/test1090310/test3.py	(revision 058e84c3b664c877a9e5d255f8e8d4dea9c6f369)
+++ work/work1/test1090310/test3.py	(date 1583844852000)
@@ -1,12 +1,12 @@
 for x in range(10):
-    print(x, end='')
+    print(x,end='')
 print()
-for x in range(1, 11):
-    print(x, end='')
+for x in range(1,11):
+    print(x,end='')
 print()
-for x in range(0, 10, 2):
-    print(x, end='')
+for x in range(0,10,2):
+    print(x,end='')
 print()
 for _ in range(3):
-    print('hello ', end='')
-print()
+    print('hello ',end='')
+print()
\ No newline at end of file
Index: work/work1/test1090310/test4.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>for x in range(10):\r\n    if x == 3:\r\n        break\r\n    print(x, end='')\r\nprint()\r\nfor x in range(10):\r\n    if x == 3:\r\n        continue\r\n    print(x, end='')\r\nprint()\r\nfor x in range(10):\r\n    if x == 3:\r\n        break\r\n    print(x, end='')\r\nelse:\r\n    print('end')\r\nprint()\r\nfor x in range(10):\r\n    if x == 3:\r\n        continue\r\n    print(x, end='')\r\nelse:\r\n    print('end')\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- work/work1/test1090310/test4.py	(revision 058e84c3b664c877a9e5d255f8e8d4dea9c6f369)
+++ work/work1/test1090310/test4.py	(date 1583845426000)
@@ -1,23 +1,21 @@
 for x in range(10):
-    if x == 3:
+    if x==3:
         break
-    print(x, end='')
+    print(x,end='')
 print()
 for x in range(10):
-    if x == 3:
+    if x==3:
         continue
-    print(x, end='')
+    print(x,end='')
 print()
 for x in range(10):
-    if x == 3:
+    if x==3:
         break
-    print(x, end='')
-else:
-    print('end')
+    print(x,end='')
+else:print('end')
 print()
 for x in range(10):
-    if x == 3:
+    if x==3:
         continue
-    print(x, end='')
-else:
-    print('end')
+    print(x,end='')
+else:print('end')
\ No newline at end of file
Index: work/work1/test1090310/test7.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>def substract(a, b):\r\n    return a - b\r\n\r\n\r\nprint(substract(10, 20))\r\nprint(substract(a=10, b=20))\r\nprint(substract(b=10, a=20))\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- work/work1/test1090310/test7.py	(revision 058e84c3b664c877a9e5d255f8e8d4dea9c6f369)
+++ work/work1/test1090310/test7.py	(date 1583847114000)
@@ -1,7 +1,5 @@
 def substract(a, b):
     return a - b
-
-
-print(substract(10, 20))
-print(substract(a=10, b=20))
-print(substract(b=10, a=20))
+print(substract(10,20))
+print(substract(a=10,b=20))
+print(substract(b=10,a=20))
\ No newline at end of file
Index: work/work1/test1090312/pa.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>def axdd(a, b):\r\n    return a + b\r\n\r\n\r\nif __name__ == '__main__':\r\n    print('run from test9.py')\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- work/work1/test1090312/pa.py	(revision 058e84c3b664c877a9e5d255f8e8d4dea9c6f369)
+++ work/work1/test1090312/pa.py	(date 1584020338000)
@@ -1,6 +1,4 @@
 def axdd(a, b):
     return a + b
-
-
-if __name__ == '__main__':
-    print('run from test9.py')
+if __name__ =='__main__':
+    print('run from test9.py')
\ No newline at end of file
Index: work/work1/test1090312/test1.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>def add_all(*args):\r\n    print(type(args))\r\n    return sum(args)\r\n\r\n\r\nprint(add_all(10, 20, 30))\r\nprint(add_all(10))\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- work/work1/test1090312/test1.py	(revision 058e84c3b664c877a9e5d255f8e8d4dea9c6f369)
+++ work/work1/test1090312/test1.py	(date 1584011114000)
@@ -2,6 +2,5 @@
     print(type(args))
     return sum(args)
 
-
 print(add_all(10, 20, 30))
 print(add_all(10))
Index: work/work1/test1090312/test11_list.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>i = [1, 2, 3, 4, 5]\r\n\r\ni[1] = 99  # add new\r\nprint(i)\r\n\r\nprint(99 in i)  # search\r\n\r\ni.remove(99)  # 刪除指定原素\r\nprint(i)\r\n\r\ni.pop(2)  # 指定第N個\r\nprint(i)\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- work/work1/test1090312/test11_list.py	(revision 058e84c3b664c877a9e5d255f8e8d4dea9c6f369)
+++ work/work1/test1090312/test11_list.py	(date 1584448422000)
@@ -1,12 +1,12 @@
-i = [1, 2, 3, 4, 5]
+i = [1, 2, 3, 4 ,5]
 
 i[1] = 99  # add new
 print(i)
 
 print(99 in i)  # search
 
-i.remove(99)  # 刪除指定原素
+i.remove(99)#刪除指定原素
 print(i)
 
-i.pop(2)  # 指定第N個
+i.pop(2)#指定第N個
 print(i)
Index: work/work1/test1090312/test2.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>def add_all(*args):\r\n    print('------------')\r\n    print(f'len(args)={len(args)}')\r\n    print(f'args[0]={args[0]}')\r\n    print(f'{20 in args}')\r\n    # print(type(args))\r\n    return sum(args)\r\n\r\n\r\nprint('sum(10,20)=', add_all(10, 20))\r\nprint('sum(10)=', add_all(10))\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- work/work1/test1090312/test2.py	(revision 058e84c3b664c877a9e5d255f8e8d4dea9c6f369)
+++ work/work1/test1090312/test2.py	(date 1584011608000)
@@ -3,9 +3,8 @@
     print(f'len(args)={len(args)}')
     print(f'args[0]={args[0]}')
     print(f'{20 in args}')
-    # print(type(args))
+    #print(type(args))
     return sum(args)
 
-
-print('sum(10,20)=', add_all(10, 20))
-print('sum(10)=', add_all(10))
+print('sum(10,20)=',add_all(10, 20))
+print('sum(10)=',add_all(10))
Index: work/work1/test1090312/test4.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># print(*objects, sep=' ', end='\\n', file=sys.stdout, flush=False)\r\na = 1\r\nb = 2\r\nprint(a, '+', b, '=', a + b, sep='')\r\nprint('Hallo ', end='', flush=True)\r\nprint(' world')\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- work/work1/test1090312/test4.py	(revision 058e84c3b664c877a9e5d255f8e8d4dea9c6f369)
+++ work/work1/test1090312/test4.py	(date 1584013392000)
@@ -2,5 +2,5 @@
 a = 1
 b = 2
 print(a, '+', b, '=', a + b, sep='')
-print('Hallo ', end='', flush=True)
+print('Hallo ', end='',flush=True)
 print(' world')
Index: work/work1/test1090312/test5.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>def add(a: int, b: int) -> int:\r\n    if not isinstance(a, int):\r\n        print('a ro b not int')\r\n        return None\r\n    return a + b\r\n\r\n\r\nprint(add('1', 1))\r\nx = lambda a, b: a + b\r\nprint(x(1, 2))\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- work/work1/test1090312/test5.py	(revision 058e84c3b664c877a9e5d255f8e8d4dea9c6f369)
+++ work/work1/test1090312/test5.py	(date 1584015134000)
@@ -1,10 +1,10 @@
-def add(a: int, b: int) -> int:
-    if not isinstance(a, int):
+def add(a:int,b:int)->int:
+    if not isinstance(a,int):
         print('a ro b not int')
         return None
     return a + b
 
 
-print(add('1', 1))
-x = lambda a, b: a + b
-print(x(1, 2))
+print(add('1',1))
+x= lambda a,b:a+b
+print(x(1,2))
Index: work/work1/test1090312/test6.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>x = lambda a, b: (a + b, a - b)\r\nprint(type(x(1, 2)), end='')\r\nprint(x(1, 2))\r\nprint(type(x(1, 2)[0]), end='')\r\nprint(x(1, 2)[0])\r\nprint(type(x(1, 2)[1]), end='')\r\nprint(x(1, 2)[1])\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- work/work1/test1090312/test6.py	(revision 058e84c3b664c877a9e5d255f8e8d4dea9c6f369)
+++ work/work1/test1090312/test6.py	(date 1584015782000)
@@ -1,7 +1,7 @@
-x = lambda a, b: (a + b, a - b)
-print(type(x(1, 2)), end='')
-print(x(1, 2))
-print(type(x(1, 2)[0]), end='')
-print(x(1, 2)[0])
-print(type(x(1, 2)[1]), end='')
-print(x(1, 2)[1])
+x= lambda a,b:(a+b,a-b)
+print(type(x(1,2)),end='')
+print(x(1,2))
+print(type(x(1,2)[0]),end='')
+print(x(1,2)[0])
+print(type(x(1,2)[1]),end='')
+print(x(1,2)[1])
\ No newline at end of file
Index: work/work1/test1090312/test7.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import pa\r\n\r\nprint(pa.axdd(1, 2))\r\n'''#import'''\r\n\r\n# import pa as pb\r\n# print(pb.axdd(1,2))\r\n'''#import and rename'''\r\n\r\n# from pa import axdd\r\n# print(axdd(1, 2))\r\n'''#import 函式庫裡的某個函式'''\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- work/work1/test1090312/test7.py	(revision 058e84c3b664c877a9e5d255f8e8d4dea9c6f369)
+++ work/work1/test1090312/test7.py	(date 1584020892000)
@@ -1,5 +1,4 @@
 import pa
-
 print(pa.axdd(1, 2))
 '''#import'''
 
Index: work/work1/test1090317/test2.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>x = [1, 3, 2]\r\nfor a in x:  # 標頭搜尋\r\n    print(a, end=',')\r\nprint()\r\nfor i in range(len(x)):  # 所引搜尋\r\n    print(x[i], end=',')\r\nprint()\r\nfor idx, value in enumerate(x):  # 函式雙回傳\r\n    print('[', idx, ']=', value, sep='')\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- work/work1/test1090317/test2.py	(revision 058e84c3b664c877a9e5d255f8e8d4dea9c6f369)
+++ work/work1/test1090317/test2.py	(date 1584446266000)
@@ -1,9 +1,9 @@
 x = [1, 3, 2]
-for a in x:  # 標頭搜尋
+for a in x:#標頭搜尋
     print(a, end=',')
 print()
-for i in range(len(x)):  # 所引搜尋
+for i in range(len(x)):#所引搜尋
     print(x[i], end=',')
 print()
-for idx, value in enumerate(x):  # 函式雙回傳
+for idx, value in enumerate(x):#函式雙回傳
     print('[', idx, ']=', value, sep='')
Index: work/work1/test1090317/test4.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>def f(n):\r\n    if n <= 3:\r\n        return True\r\n    else:\r\n        return False\r\n\r\n\r\ni = [5, 4, 3, 2, 1]\r\nnew_list = list(filter(f, i))\r\nx = filter(f, i)\r\nprint(new_list)\r\nprint(x)\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- work/work1/test1090317/test4.py	(revision 058e84c3b664c877a9e5d255f8e8d4dea9c6f369)
+++ work/work1/test1090317/test4.py	(date 1584446592000)
@@ -7,6 +7,6 @@
 
 i = [5, 4, 3, 2, 1]
 new_list = list(filter(f, i))
-x = filter(f, i)
+x=filter(f, i)
 print(new_list)
 print(x)
Index: work/work1/test1090319/test.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>fraction = 0\r\nl = list()\r\nwhile True:\r\n    fraction = int(input('請輸入分數:'))\r\n    if fraction <= -1: break\r\n    l.append(fraction)\r\n    # l +=[fraction]\r\n\r\nprint('分數清單:', l)\r\naverage = sum(l) / len(l)\r\nprint('平均    :', average)\r\nprint('最高分數:', max(l))\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- work/work1/test1090319/test.py	(revision 058e84c3b664c877a9e5d255f8e8d4dea9c6f369)
+++ work/work1/test1090319/test.py	(date 1584624350000)
@@ -4,7 +4,7 @@
     fraction = int(input('請輸入分數:'))
     if fraction <= -1: break
     l.append(fraction)
-    # l +=[fraction]
+    #l +=[fraction]
 
 print('分數清單:', l)
 average = sum(l) / len(l)
